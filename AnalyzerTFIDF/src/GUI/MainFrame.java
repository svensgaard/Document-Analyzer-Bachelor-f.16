/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Evaluation.EvaluationWrapper;
import Kmeans.Centroid;
import analyzertfidf.BayesClassifier;
import analyzertfidf.Text;
import analyzertfidf.TextProcessor;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Bryan
 */
public class MainFrame extends javax.swing.JFrame {

    String filePath;
    ArrayList<Text> texts_list;
    ArrayList<String> distinctTerms;
    private ArrayList<Centroid> result;
    private ArrayList<String> cluster_list;
    private BayesClassifier classifier;
    private final TextProcessor tp = new TextProcessor();
    private EvaluationWrapper evaluation = new EvaluationWrapper();
    boolean classifierInitiated = false;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initFields();

        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result) {
        initFields();
        this.result = result;
        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result, String filePath, BayesClassifier classifier) {
        initFields();

        this.filePath = filePath;
        this.result = result;
        this.classifier = classifier;

        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result, BayesClassifier classifier) {
        initFields();

        this.result = result;
        this.classifier = classifier;

        initComponents();
        evaluateResult(result);
    }

    private void initFields() {
        texts_list = new ArrayList<>();
    }

    private void evaluateResult(ArrayList<Centroid> result) {
        avgDistToCenterLabel.setText(String.valueOf(evaluation.getAvgDistance(result)));
        avgDistBetweenClustersLabel.setText(String.valueOf(evaluation.getAvgInterClusterDist(result)));
        avgSimToCenterLabel.setText(String.valueOf(evaluation.getAvgSimilarity(result)));
        avgSimBetweenCentersLabel.setText(String.valueOf(evaluation.getAvgInterClusterSim(result)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        corpora_scroll = new javax.swing.JScrollPane();
        list_corpus = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        texts_scroll = new javax.swing.JScrollPane();
        list_texts = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        button_close = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_area_input = new javax.swing.JTextArea();
        classify = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        text_area_result = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        avgDistToCenterLabel = new javax.swing.JLabel();
        avgDistBetweenClustersLabel = new javax.swing.JLabel();
        avgSimToCenterLabel = new javax.swing.JLabel();
        avgSimBetweenCentersLabel = new javax.swing.JLabel();
        button_readfile = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        button_clear = new javax.swing.JButton();
        button_initialize_classifier = new javax.swing.JButton();
        button_open = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        list_corpus.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return result.size(); }
            public Object getElementAt(int i) { return result.get(i).toString(); }
        });
        list_corpus.setSelectedIndex(0);

        list_corpus.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    getTexts(list_corpus.getSelectedIndex());
                }
            }
        });
        corpora_scroll.setViewportView(list_corpus);

        jLabel1.setText("Corpora");

        list_texts.setModel(new javax.swing.AbstractListModel() {

            public int getSize() { return texts_list.size(); }
            public Object getElementAt(int i) { return texts_list.get(i).fileName; }
        });
        list_texts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                list_textsValueChanged(evt);
            }
        });
        texts_scroll.setViewportView(list_texts);
        getTexts(list_corpus.getSelectedIndex());

        jLabel2.setText("Texts");

        button_close.setText("Close");
        button_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_closeActionPerformed(evt);
            }
        });

        text_area_input.setColumns(20);
        text_area_input.setLineWrap(true);
        text_area_input.setRows(5);
        text_area_input.setWrapStyleWord(true);
        jScrollPane1.setViewportView(text_area_input);

        classify.setText("Classify");
        classify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyActionPerformed(evt);
            }
        });

        text_area_result.setEditable(false);
        text_area_result.setColumns(20);
        text_area_result.setLineWrap(true);
        text_area_result.setRows(5);
        text_area_result.setWrapStyleWord(true);
        jScrollPane2.setViewportView(text_area_result);

        jLabel3.setText("Result");

        jLabel4.setText("Input");

        jLabel5.setText("Stats for clustering");

        jLabel6.setText("Average distance to cluster center");

        jLabel7.setText("Average distance bewtween clusters");

        jLabel8.setText("Average similarity to cluster center");

        jLabel9.setText("Average similarity between cluster centers:");

        avgDistToCenterLabel.setText("jLabel10");

        avgDistBetweenClustersLabel.setText("jLabel11");

        avgSimToCenterLabel.setText("jLabel12");

        avgSimBetweenCentersLabel.setText("jLabel13");

        button_readfile.setText("Read file");
        button_readfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_readfileActionPerformed(evt);
            }
        });

        jLabel10.setText("Classifier");

        button_clear.setText("Clear");
        button_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_clearActionPerformed(evt);
            }
        });

        button_initialize_classifier.setText("Initialize classifier");
        button_initialize_classifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_initialize_classifierActionPerformed(evt);
            }
        });

        button_open.setText("Open file");
        button_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(corpora_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(texts_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_open)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button_initialize_classifier)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(classify)
                                                .addGap(74, 74, 74)
                                                .addComponent(button_clear))
                                            .addComponent(button_readfile)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(jLabel4))))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(avgDistToCenterLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(avgDistBetweenClustersLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(avgSimToCenterLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(12, 12, 12)
                        .addComponent(avgSimBetweenCentersLabel)))
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(130, 130, 130)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(button_close)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)))
                .addGap(232, 232, 232))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button_close)
                    .addComponent(jLabel10))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(corpora_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(button_open)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(texts_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(avgDistToCenterLabel))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(avgDistBetweenClustersLabel))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(avgSimToCenterLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(avgSimBetweenCentersLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classify)
                            .addComponent(button_clear))
                        .addGap(12, 12, 12)
                        .addComponent(button_readfile)
                        .addGap(45, 45, 45)
                        .addComponent(button_initialize_classifier)))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_button_closeActionPerformed

    private void classifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyActionPerformed
        if (classifierInitiated) {
            text_area_result.setText("Your input belongs to cluster: " + classifier.predictClassification(text_area_input.getText()));
        } else {
            text_area_result.setText("Please initialize classifier");
        }

    }//GEN-LAST:event_classifyActionPerformed

    private void button_readfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_readfileActionPerformed
        if (classifierInitiated) {
            String fp = promptFilePath();

            if (fp != "") {
                System.out.println("LOG: GOT FILE PATH :: " + fp);
                String text = tp.readFileToString(fp);
                text_area_input.setText(text);
                String prediction = classifier.predictClassification(text);
                text_area_result.setText("Your input belongs to:\n" + prediction);

            }
        } else {
            text_area_result.setText("Please initialize classifier");
        }

    }//GEN-LAST:event_button_readfileActionPerformed

    private void button_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_clearActionPerformed
        text_area_input.setText("");
    }//GEN-LAST:event_button_clearActionPerformed

    private void button_initialize_classifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_initialize_classifierActionPerformed
        initClassifier(result);
        classifierInitiated = true;
        text_area_result.setText("Classifier Initialized!\n"
                + "Please type input, or read from a file");
    }//GEN-LAST:event_button_initialize_classifierActionPerformed

    private void list_textsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_list_textsValueChanged


    }//GEN-LAST:event_list_textsValueChanged

    private void button_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_openActionPerformed
        String path = texts_list.get(list_texts.getSelectedIndex()).path;
        
        try {
            System.out.println("TOKENS:");
            String[] tokens = tp.readFileToString(path).split("[\\d\\p{Punct}\\s\\W]+");
            for (String s : tokens) {
                System.out.println(s);
            }
            
            java.awt.Desktop.getDesktop().edit(new File(path));
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_openActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public String promptFilePath() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Select a text");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        // disable the "All files" option.
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getPath();
        } else {
            System.out.println("No Selection ");
            return "";
        }
    }

    public void getTexts(int index) {
        texts_list = result.get(index).GroupedDocument;

        list_texts.setModel(new javax.swing.AbstractListModel() {
            public int getSize() {
                return texts_list.size();
            }

            public Object getElementAt(int i) {
                return texts_list.get(i).fileName;
            }
        });
    }

    private void initClassifier(ArrayList<Centroid> result) {
        long start = System.currentTimeMillis();

        try {
            tp.generateTrainingData(result, filePath);
        } catch (IOException ex) {
            Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        long end = System.currentTimeMillis();

        System.out.println("GENERATE TRAINING DATA Running time: " + (end - start) + "ms");
        // Initialize classifier
        classifier = new BayesClassifier();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgDistBetweenClustersLabel;
    private javax.swing.JLabel avgDistToCenterLabel;
    private javax.swing.JLabel avgSimBetweenCentersLabel;
    private javax.swing.JLabel avgSimToCenterLabel;
    private javax.swing.JButton button_clear;
    private javax.swing.JButton button_close;
    private javax.swing.JButton button_initialize_classifier;
    private javax.swing.JButton button_open;
    private javax.swing.JButton button_readfile;
    private javax.swing.JButton classify;
    private javax.swing.JScrollPane corpora_scroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList list_corpus;
    private javax.swing.JList list_texts;
    private javax.swing.JTextArea text_area_input;
    private javax.swing.JTextArea text_area_result;
    private javax.swing.JScrollPane texts_scroll;
    // End of variables declaration//GEN-END:variables

}
