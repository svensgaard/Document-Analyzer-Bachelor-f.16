/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Evaluation.EvaluationWrapper;
import Kmeans.Centroid;
import analyzertfidf.BayesClassifier;
import analyzertfidf.Text;
import analyzertfidf.TextProcessor;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Bryan
 */
public class MainFrame extends javax.swing.JFrame {

    String filePath;
    ArrayList<Text> texts_list;
    ArrayList<String> distinctTerms;
    private ArrayList<Centroid> result;
    private ArrayList<String> cluster_list;
    private BayesClassifier classifier;
    private final TextProcessor tp = new TextProcessor();
    private EvaluationWrapper evaluation = new EvaluationWrapper();
    boolean classifierInitiated = false;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initFields();

        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result) {
        initFields();
        this.result = result;
        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result, String filePath, BayesClassifier classifier) {
        initFields();

        this.filePath = filePath;
        this.result = result;
        this.classifier = classifier;

        initComponents();
        evaluateResult(result);

    }

    public MainFrame(ArrayList<Centroid> result, BayesClassifier classifier) {
        initFields();

        this.result = result;
        this.classifier = classifier;

        initComponents();
        evaluateResult(result);
    }

    private void initFields() {
        texts_list = new ArrayList<>();
    }

    private void evaluateResult(ArrayList<Centroid> result) {
        avgDistToCenterLabel.setText(String.valueOf(evaluation.getAvgDistance(result)));
        avgDistBetweenClustersLabel.setText(String.valueOf(evaluation.getAvgInterClusterDist(result)));
        avgSimToCenterLabel.setText(String.valueOf(evaluation.getAvgSimilarity(result)));
        avgSimBetweenCentersLabel.setText(String.valueOf(evaluation.getAvgInterClusterSim(result)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        corpora_scroll = new javax.swing.JScrollPane();
        list_corpus = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        texts_scroll = new javax.swing.JScrollPane();
        list_texts = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        button_close = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_area_input = new javax.swing.JTextArea();
        classify = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        text_area_result = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        avgDistToCenterLabel = new javax.swing.JLabel();
        avgDistBetweenClustersLabel = new javax.swing.JLabel();
        avgSimToCenterLabel = new javax.swing.JLabel();
        avgSimBetweenCentersLabel = new javax.swing.JLabel();
        button_readfile = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        button_clear = new javax.swing.JButton();
        button_initialize_classifier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        list_corpus.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return result.size(); }
            public Object getElementAt(int i) { return result.get(i).toString(); }
        });
        list_corpus.setSelectedIndex(0);

        list_corpus.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    getTexts(list_corpus.getSelectedIndex());
                }
            }
        });
        corpora_scroll.setViewportView(list_corpus);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 114;
        gridBagConstraints.ipady = 185;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 17, 0, 0);
        getContentPane().add(corpora_scroll, gridBagConstraints);

        jLabel1.setText("Corpora");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 50, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        list_texts.setModel(new javax.swing.AbstractListModel() {

            public int getSize() { return texts_list.size(); }
            public Object getElementAt(int i) { return texts_list.get(i).fileName; }
        });
        texts_scroll.setViewportView(list_texts);
        getTexts(list_corpus.getSelectedIndex());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 110;
        gridBagConstraints.ipady = 185;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 30, 0, 0);
        getContentPane().add(texts_scroll, gridBagConstraints);

        jLabel2.setText("Texts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 76, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        button_close.setText("Close");
        button_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_closeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 17, 0, 0);
        getContentPane().add(button_close, gridBagConstraints);

        text_area_input.setColumns(20);
        text_area_input.setLineWrap(true);
        text_area_input.setRows(5);
        text_area_input.setWrapStyleWord(true);
        jScrollPane1.setViewportView(text_area_input);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 221;
        gridBagConstraints.ipady = 97;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 60, 0, 44);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        classify.setText("Classify");
        classify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 60, 0, 0);
        getContentPane().add(classify, gridBagConstraints);

        text_area_result.setEditable(false);
        text_area_result.setColumns(20);
        text_area_result.setLineWrap(true);
        text_area_result.setRows(5);
        text_area_result.setWrapStyleWord(true);
        jScrollPane2.setViewportView(text_area_result);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 221;
        gridBagConstraints.ipady = 41;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 60, 0, 44);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jLabel3.setText("Result");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 8, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Input");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 8, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Stats for clustering");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 17, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Average distance to cluster center");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 56;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 17, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Average distance bewtween clusters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 17, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("Average similarity to cluster center");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 17, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        jLabel9.setText("Average similarity between cluster centers:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 17, 54, 0);
        getContentPane().add(jLabel9, gridBagConstraints);

        avgDistToCenterLabel.setText("jLabel10");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 12, 0, 0);
        getContentPane().add(avgDistToCenterLabel, gridBagConstraints);

        avgDistBetweenClustersLabel.setText("jLabel11");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        getContentPane().add(avgDistBetweenClustersLabel, gridBagConstraints);

        avgSimToCenterLabel.setText("jLabel12");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 12, 0, 0);
        getContentPane().add(avgSimToCenterLabel, gridBagConstraints);

        avgSimBetweenCentersLabel.setText("jLabel13");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 54, 0);
        getContentPane().add(avgSimBetweenCentersLabel, gridBagConstraints);

        button_readfile.setText("Read file");
        button_readfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_readfileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 60, 0, 0);
        getContentPane().add(button_readfile, gridBagConstraints);

        jLabel10.setText("Classifier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 3, 0, 0);
        getContentPane().add(jLabel10, gridBagConstraints);

        button_clear.setText("Clear");
        button_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_clearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 24;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 11, 0, 44);
        getContentPane().add(button_clear, gridBagConstraints);

        button_initialize_classifier.setText("Initialize classifier");
        button_initialize_classifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_initialize_classifierActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 58, 0, 0);
        getContentPane().add(button_initialize_classifier, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_button_closeActionPerformed

    private void classifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyActionPerformed
        if (classifierInitiated) {
            text_area_result.setText("Your input belongs to cluster: " + classifier.predictClassification(text_area_input.getText()));
        } else {
            text_area_result.setText("Please initialize classifier");
        }

    }//GEN-LAST:event_classifyActionPerformed

    private void button_readfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_readfileActionPerformed
        if (classifierInitiated) {
            String fp = promptFilePath();

            if (fp != "") {
                System.out.println("LOG: GOT FILE PATH :: " + fp);
                String text = tp.readFileToString(fp);
                text_area_input.setText(text);
                String prediction = classifier.predictClassification(text);
                text_area_result.setText("Your input belongs to:\n" + prediction);

            }
        } else {
            text_area_result.setText("Please initialize classifier");
        }

    }//GEN-LAST:event_button_readfileActionPerformed

    private void button_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_clearActionPerformed
        text_area_input.setText("");
    }//GEN-LAST:event_button_clearActionPerformed

    private void button_initialize_classifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_initialize_classifierActionPerformed
        initClassifier(result);
        classifierInitiated = true;
        text_area_result.setText("Classifier Initialized!\n"
                + "Please type input, or read from a file");
    }//GEN-LAST:event_button_initialize_classifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public String promptFilePath() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Select a text");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        // disable the "All files" option.
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getPath();
        } else {
            System.out.println("No Selection ");
            return "";
        }
    }

    public void getTexts(int index) {
        texts_list = result.get(index).GroupedDocument;

        list_texts.setModel(new javax.swing.AbstractListModel() {
            public int getSize() {
                return texts_list.size();
            }

            public Object getElementAt(int i) {
                return texts_list.get(i).fileName;
            }
        });
    }

    private void initClassifier(ArrayList<Centroid> result) {
        long start = System.currentTimeMillis();

        try {
            tp.generateTrainingData(result, filePath);
        } catch (IOException ex) {
            Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        long end = System.currentTimeMillis();

        System.out.println("GENERATE TRAINING DATA Running time: " + (end - start) + "ms");
        // Initialize classifier
        classifier = new BayesClassifier();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgDistBetweenClustersLabel;
    private javax.swing.JLabel avgDistToCenterLabel;
    private javax.swing.JLabel avgSimBetweenCentersLabel;
    private javax.swing.JLabel avgSimToCenterLabel;
    private javax.swing.JButton button_clear;
    private javax.swing.JButton button_close;
    private javax.swing.JButton button_initialize_classifier;
    private javax.swing.JButton button_readfile;
    private javax.swing.JButton classify;
    private javax.swing.JScrollPane corpora_scroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList list_corpus;
    private javax.swing.JList list_texts;
    private javax.swing.JTextArea text_area_input;
    private javax.swing.JTextArea text_area_result;
    private javax.swing.JScrollPane texts_scroll;
    // End of variables declaration//GEN-END:variables

}
